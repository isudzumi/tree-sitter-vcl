==================
Backend
==================

backend backend_name_0 {
  .connect_timeout = 1s;
  .dynamic = true;
  .port = "443";
  .host = "example.com";
  .first_byte_timeout = 20s;
  .max_connections = 500;
  .between_bytes_timeout = 20s;
  .share_key = "6FxweUD4BuxaP3diaJvYJXo";
  .ssl = true;
  .ssl_sni_hostname = "example.com";
  .ssl_cert_hostname = "example.com";
  .ssl_check_cert = always;
}

---

(program
  (backend_declaration
    name: (identifier)
    (backend_attribute
      name: (identifier)
      (rtime))
    (backend_attribute
      name: (identifier)
      (true))
    (backend_attribute
      name: (identifier)
      (string
        (string_fragment)))
    (backend_attribute
      name: (identifier)
      (string
        (string_fragment)))
    (backend_attribute
      name: (identifier)
      (rtime))
    (backend_attribute
      name: (identifier)
      (number))
    (backend_attribute
      name: (identifier)
      (rtime))
    (backend_attribute
      name: (identifier)
      (string
        (string_fragment)))
    (backend_attribute
      name: (identifier)
      (true))
    (backend_attribute
      name: (identifier)
      (string
        (string_fragment)))
    (backend_attribute
      name: (identifier)
      (string
        (string_fragment)))
    (backend_attribute
      name: (identifier)
      (identifier))))

==================
Director
==================

director director_name_0 random {
  .quoram = 50%;
  .retries = 3;
  { .backend = F_backend1; .weight = 2; }
  { .backend = F_backend2; .weight = 1; }
  { .backend = F_backend3; .weight = 1; }
}

---

(program
  (director_declaration
    name: (identifier)
    type: (identifier)
    (backend_attribute
      name: (identifier)
      (percentage))
    (backend_attribute
      name: (identifier)
      (number))
    (backend_field
      (backend_attribute
        name: (identifier)
        (identifier))
      (backend_attribute
        name: (identifier)
        (number)))
    (backend_field
      (backend_attribute
        name: (identifier)
        (identifier))
      (backend_attribute
        name: (identifier)
        (number)))
    (backend_field
      (backend_attribute
        name: (identifier)
        (identifier))
      (backend_attribute
        name: (identifier)
        (number)))))

==================
Table
==================

table table_name {
  "/old/path": "https://other.hostname/new/path",
  "/another/path": "/new/path",
}

table routing_table BACKEND {
  "a.example.com": b0,
  "b.example.com": b1,
  "c.example.com": b2,
}

---

(program
  (table_declaration
    name: (identifier)
    (table_record
      (table_key
        (string
          (string_fragment)))
      (table_value
        (string
          (string_fragment))))
    (table_record
      (table_key
        (string
          (string_fragment)))
      (table_value
        (string
          (string_fragment)))))
  (table_declaration
    name: (identifier)
    type: (identifier)
      (table_record
        (table_key
          (string
            (string_fragment)))
        (table_value
          (identifier)))
      (table_record
        (table_key
          (string
            (string_fragment)))
        (table_value
          (identifier)))
      (table_record
        (table_key
          (string
            (string_fragment)))
        (table_value
          (identifier)))))

==================
ACL
==================

acl office_ip_ranges {
  "192.0.2.0"/24;
  ! "192.0.2.12";
  "198.51.100.4";
  "2001:db8:ffff:ffff:ffff:ffff:ffff:ffff";
}

---

(program
  (acl_declaration
    name: (identifier)
    (ip_address
      (string
        (string_fragment))
      (routing_prefix))
    (ip_address
      (negate_operator)
      (string
        (string_fragment))
    (ip_address
      (string
        (string_fragment))
    (ip_address
      (string
        (string_fragment))))
